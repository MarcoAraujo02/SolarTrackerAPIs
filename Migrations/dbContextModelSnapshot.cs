// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SolarTrackerAPIs.Data;

#nullable disable

namespace SolarTrackerAPIs.Migrations
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SolarTrackerAPIs.Models.Estabelecimento", b =>
                {
                    b.Property<int>("IdEstabelecimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstabelecimento"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_localizacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("nm_estabelecimento");

                    b.HasKey("IdEstabelecimento");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("SolarTrackerAPIs.Models.PlacaSolar", b =>
                {
                    b.Property<int>("idPlacaSolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPlacaSolar"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_placa_solar");

                    b.Property<int>("IdEstabelecimento")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_estabelecimento");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("st_placa_solar");

                    b.HasKey("idPlacaSolar");

                    b.ToTable("PlacaSolares");
                });

            modelBuilder.Entity("SolarTrackerAPIs.Models.RegistroEnergia", b =>
                {
                    b.Property<int>("idRegistroEnergia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRegistroEnergia"));

                    b.Property<int>("Consumo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("nr_consumo_kwh");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("dt_registro");

                    b.Property<int>("Geracao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("nr_geracao_kwh");

                    b.Property<int>("IdPlacaSolar")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_PlacaSolar");

                    b.Property<int>("Temperatura")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("nr_temperatura ");

                    b.HasKey("idRegistroEnergia");

                    b.ToTable("RegistroEnergias");
                });

            modelBuilder.Entity("SolarTrackerAPIs.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("nm_usuario");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("cd_senha");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
